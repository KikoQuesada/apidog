{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faque\\\\Desktop\\\\Ironhack\\\\Proyecto-modulo-3\\\\APIDOG\\\\web\\\\src\\\\components\\\\adoptions\\\\AdoptionForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { AuthContext } from '../../contexts/AuthStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validations = {\n  homeInfo: value => {\n    let message;\n\n    if (value.length > 1000) {\n      message = 'You only have 1000 chars to tell us about your home';\n    }\n\n    return message;\n  },\n  familyInfo: value => {\n    let message;\n\n    if (value.length > 1000) {\n      message = 'You only have 1000 chars to tell us about your family';\n    }\n\n    return message;\n  },\n  workInfo: value => {\n    let message;\n\n    if (value.length > 1000) {\n      message = 'You only have 1000 chars to tell us about your work and hobbies';\n    }\n\n    return message;\n  },\n  petNecessities: value => {\n    let message;\n\n    if (value.length > 1000) {\n      message = 'You only have 1000 chars to tell us about pet necessities';\n    }\n\n    return message;\n  },\n  petCosts: value => {\n    let message;\n\n    if (value.length > 1000) {\n      message = 'You only have 1000 chars to tell us about pet costs';\n    }\n\n    return message;\n  },\n  whyAdoption: value => {\n    let message;\n\n    if (value.length > 1000) {\n      message = 'You only have 1000 chars to tell us about why you want to adopt';\n    }\n\n    return message;\n  },\n  perfectPet: value => {\n    let message;\n\n    if (value.length > 1000) {\n      message = 'You only have 1000 chars to tell us about your perfect pet';\n    }\n\n    return message;\n  },\n  shelterPolicy: value => {\n    let message;\n\n    if (value.length > 1000) {\n      message = 'You only have 1000 chars to tell us about our shelter policy';\n    }\n\n    return message;\n  },\n  badBehaviour: value => {\n    let message;\n\n    if (value.length > 1000) {\n      message = 'You only have 1000 chars to tell us about bad behaviour';\n    }\n\n    return message;\n  },\n  behaviourSolution: value => {\n    let message;\n\n    if (value.length > 1000) {\n      message = 'You only have 1000 chars to tell us about behaviour solutions';\n    }\n\n    return message;\n  }\n};\n\nfunction AdoptionForm() {\n  _s();\n\n  const history = useHistory();\n  const [state, setState] = useState({\n    adoption: {\n      homeInfo: '',\n      familyInfo: '',\n      workInfo: '',\n      petNecessities: '',\n      petCosts: '',\n      whyAdoption: '',\n      perfectPet: '',\n      shelterPolicy: '',\n      badBehaviour: '',\n      behaviourSolution: ''\n    },\n    errors: {\n      homeInfo: validations.homeInfo(),\n      familyInfo: validations.familyInfo(),\n      workInfo: validations.workInfo(),\n      petNecessities: validations.petNecessities(),\n      petCosts: validations.petCosts(),\n      whyAdoption: validations.whyAdoption(),\n      perfectPet: validations.perfectPet(),\n      shelterPolicy: validations.shelterPolicy(),\n      badBehaviour: validations.badBehaviour(),\n      behaviourSolution: validations.behaviourSolution()\n    },\n    touch: {}\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"YEAAAAH\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdoptionForm, \"GkfmgBn4cuFP3W37QmyAOkPPSgY=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdoptionForm;\nexport default AdoptionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdoptionForm\");","map":{"version":3,"sources":["C:/Users/faque/Desktop/Ironhack/Proyecto-modulo-3/APIDOG/web/src/components/adoptions/AdoptionForm.js"],"names":["useState","useHistory","AuthContext","validations","homeInfo","value","message","length","familyInfo","workInfo","petNecessities","petCosts","whyAdoption","perfectPet","shelterPolicy","badBehaviour","behaviourSolution","AdoptionForm","history","state","setState","adoption","errors","touch"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAGC,KAAD,IAAW;AACjB,QAAIC,OAAJ;;AACA,QAAID,KAAK,CAACE,MAAN,GAAe,IAAnB,EAAyB;AACrBD,MAAAA,OAAO,GAAG,qDAAV;AACH;;AACD,WAAOA,OAAP;AACH,GAPe;AAQhBE,EAAAA,UAAU,EAAGH,KAAD,IAAW;AACnB,QAAIC,OAAJ;;AACA,QAAID,KAAK,CAACE,MAAN,GAAe,IAAnB,EAAyB;AACrBD,MAAAA,OAAO,GAAG,uDAAV;AACH;;AACD,WAAOA,OAAP;AACH,GAde;AAehBG,EAAAA,QAAQ,EAAGJ,KAAD,IAAW;AACjB,QAAIC,OAAJ;;AACA,QAAID,KAAK,CAACE,MAAN,GAAe,IAAnB,EAAyB;AACrBD,MAAAA,OAAO,GAAG,iEAAV;AACH;;AACD,WAAOA,OAAP;AACH,GArBe;AAsBhBI,EAAAA,cAAc,EAAGL,KAAD,IAAW;AACvB,QAAIC,OAAJ;;AACA,QAAID,KAAK,CAACE,MAAN,GAAe,IAAnB,EAAyB;AACrBD,MAAAA,OAAO,GAAG,2DAAV;AACH;;AACD,WAAOA,OAAP;AACH,GA5Be;AA6BhBK,EAAAA,QAAQ,EAAGN,KAAD,IAAW;AACjB,QAAIC,OAAJ;;AACA,QAAID,KAAK,CAACE,MAAN,GAAe,IAAnB,EAAyB;AACrBD,MAAAA,OAAO,GAAG,qDAAV;AACH;;AACD,WAAOA,OAAP;AACH,GAnCe;AAoChBM,EAAAA,WAAW,EAAGP,KAAD,IAAW;AACpB,QAAIC,OAAJ;;AACA,QAAID,KAAK,CAACE,MAAN,GAAe,IAAnB,EAAyB;AACrBD,MAAAA,OAAO,GAAG,iEAAV;AACH;;AACD,WAAOA,OAAP;AACH,GA1Ce;AA2ChBO,EAAAA,UAAU,EAAGR,KAAD,IAAW;AACnB,QAAIC,OAAJ;;AACA,QAAID,KAAK,CAACE,MAAN,GAAe,IAAnB,EAAyB;AACrBD,MAAAA,OAAO,GAAG,4DAAV;AACH;;AACD,WAAOA,OAAP;AACH,GAjDe;AAkDhBQ,EAAAA,aAAa,EAAGT,KAAD,IAAW;AACtB,QAAIC,OAAJ;;AACA,QAAID,KAAK,CAACE,MAAN,GAAe,IAAnB,EAAyB;AACrBD,MAAAA,OAAO,GAAG,8DAAV;AACH;;AACD,WAAOA,OAAP;AACH,GAxDe;AAyDhBS,EAAAA,YAAY,EAAGV,KAAD,IAAW;AACrB,QAAIC,OAAJ;;AACA,QAAID,KAAK,CAACE,MAAN,GAAe,IAAnB,EAAyB;AACrBD,MAAAA,OAAO,GAAG,yDAAV;AACH;;AACD,WAAOA,OAAP;AACH,GA/De;AAgEhBU,EAAAA,iBAAiB,EAAGX,KAAD,IAAW;AAC1B,QAAIC,OAAJ;;AACA,QAAID,KAAK,CAACE,MAAN,GAAe,IAAnB,EAAyB;AACrBD,MAAAA,OAAO,GAAG,+DAAV;AACH;;AACD,WAAOA,OAAP;AACH;AAtEe,CAApB;;AAyEA,SAASW,YAAT,GAAwB;AAAA;;AAEpB,QAAMC,OAAO,GAAGjB,UAAU,EAA1B;AAEA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC;AAC/BqB,IAAAA,QAAQ,EAAE;AACNjB,MAAAA,QAAQ,EAAE,EADJ;AAENI,MAAAA,UAAU,EAAE,EAFN;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,cAAc,EAAE,EAJV;AAKNC,MAAAA,QAAQ,EAAE,EALJ;AAMNC,MAAAA,WAAW,EAAE,EANP;AAONC,MAAAA,UAAU,EAAE,EAPN;AAQNC,MAAAA,aAAa,EAAE,EART;AASNC,MAAAA,YAAY,EAAE,EATR;AAUNC,MAAAA,iBAAiB,EAAE;AAVb,KADqB;AAa/BM,IAAAA,MAAM,EAAE;AACJlB,MAAAA,QAAQ,EAAED,WAAW,CAACC,QAAZ,EADN;AAEJI,MAAAA,UAAU,EAAEL,WAAW,CAACK,UAAZ,EAFR;AAGJC,MAAAA,QAAQ,EAAEN,WAAW,CAACM,QAAZ,EAHN;AAIJC,MAAAA,cAAc,EAAEP,WAAW,CAACO,cAAZ,EAJZ;AAKJC,MAAAA,QAAQ,EAAER,WAAW,CAACQ,QAAZ,EALN;AAMJC,MAAAA,WAAW,EAAET,WAAW,CAACS,WAAZ,EANT;AAOJC,MAAAA,UAAU,EAAEV,WAAW,CAACU,UAAZ,EAPR;AAQJC,MAAAA,aAAa,EAAEX,WAAW,CAACW,aAAZ,EARX;AASJC,MAAAA,YAAY,EAAEZ,WAAW,CAACY,YAAZ,EATV;AAUJC,MAAAA,iBAAiB,EAAEb,WAAW,CAACa,iBAAZ;AAVf,KAbuB;AAyB/BO,IAAAA,KAAK,EAAE;AAzBwB,GAAD,CAAlC;AAgCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAvCQN,Y;UAEWhB,U;;;KAFXgB,Y;AAyCT,eAAeA,YAAf","sourcesContent":["import { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { AuthContext } from '../../contexts/AuthStore';\r\n\r\nconst validations = {\r\n    homeInfo: (value) => {\r\n        let message;\r\n        if (value.length > 1000) {\r\n            message = 'You only have 1000 chars to tell us about your home'\r\n        }\r\n        return message;\r\n    },\r\n    familyInfo: (value) => {\r\n        let message;\r\n        if (value.length > 1000) {\r\n            message = 'You only have 1000 chars to tell us about your family'\r\n        }\r\n        return message;\r\n    },\r\n    workInfo: (value) => {\r\n        let message;\r\n        if (value.length > 1000) {\r\n            message = 'You only have 1000 chars to tell us about your work and hobbies'\r\n        }\r\n        return message;\r\n    },\r\n    petNecessities: (value) => {\r\n        let message;\r\n        if (value.length > 1000) {\r\n            message = 'You only have 1000 chars to tell us about pet necessities'\r\n        }\r\n        return message;\r\n    },\r\n    petCosts: (value) => {\r\n        let message;\r\n        if (value.length > 1000) {\r\n            message = 'You only have 1000 chars to tell us about pet costs'\r\n        }\r\n        return message;\r\n    },\r\n    whyAdoption: (value) => {\r\n        let message;\r\n        if (value.length > 1000) {\r\n            message = 'You only have 1000 chars to tell us about why you want to adopt'\r\n        }\r\n        return message;\r\n    },\r\n    perfectPet: (value) => {\r\n        let message;\r\n        if (value.length > 1000) {\r\n            message = 'You only have 1000 chars to tell us about your perfect pet'\r\n        }\r\n        return message;\r\n    },\r\n    shelterPolicy: (value) => {\r\n        let message;\r\n        if (value.length > 1000) {\r\n            message = 'You only have 1000 chars to tell us about our shelter policy'\r\n        }\r\n        return message;\r\n    },\r\n    badBehaviour: (value) => {\r\n        let message;\r\n        if (value.length > 1000) {\r\n            message = 'You only have 1000 chars to tell us about bad behaviour'\r\n        }\r\n        return message;\r\n    },\r\n    behaviourSolution: (value) => {\r\n        let message;\r\n        if (value.length > 1000) {\r\n            message = 'You only have 1000 chars to tell us about behaviour solutions'\r\n        }\r\n        return message;\r\n    },\r\n}\r\n\r\nfunction AdoptionForm() {\r\n\r\n    const history = useHistory();\r\n\r\n    const [state, setState] = useState({\r\n        adoption: {\r\n            homeInfo: '',\r\n            familyInfo: '',\r\n            workInfo: '',\r\n            petNecessities: '',\r\n            petCosts: '',\r\n            whyAdoption: '',\r\n            perfectPet: '',\r\n            shelterPolicy: '',\r\n            badBehaviour: '',\r\n            behaviourSolution: '',\r\n        },\r\n        errors: {\r\n            homeInfo: validations.homeInfo(),\r\n            familyInfo: validations.familyInfo(),\r\n            workInfo: validations.workInfo(),\r\n            petNecessities: validations.petNecessities(),\r\n            petCosts: validations.petCosts(),\r\n            whyAdoption: validations.whyAdoption(),\r\n            perfectPet: validations.perfectPet(),\r\n            shelterPolicy: validations.shelterPolicy(),\r\n            badBehaviour: validations.badBehaviour(),\r\n            behaviourSolution: validations.behaviourSolution(),\r\n        },\r\n        touch: {}\r\n    })\r\n\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div>YEAAAAH</div>\r\n    );\r\n}\r\n\r\nexport default AdoptionForm;"]},"metadata":{},"sourceType":"module"}