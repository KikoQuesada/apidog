{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faque\\\\Desktop\\\\Ironhack\\\\Proyecto-modulo-3\\\\APIDOG\\\\web\\\\src\\\\components\\\\users\\\\user-form\\\\UserForm.js\",\n    _s = $RefreshSig$();\n\nimport './UserForm.css';\nimport { useState } from 'react';\nimport userService from '../../../services/users-service';\nimport { useHistory } from 'react-router';\nimport usePlacesAutocomplete from '../../shared/UsePlacesAutocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMAIL_PATTERN = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst PASSWORD_PATTERN = /^.{8,}$/;\nconst validations = {\n  name: value => {\n    let message;\n\n    if (!value) {\n      message = 'A name is required';\n    } else if (value.length < 3) {\n      message = 'Name needs at least 3 chars';\n    } else if (value.length > 50) {\n      message = 'Name needs at most 50 chars';\n    }\n\n    return message;\n  },\n  lastName: value => {\n    let message;\n\n    if (!value) {\n      message = 'A last name is required';\n    } else if (value > 50) {\n      message = 'The last name cant be greater than 50 chars';\n    }\n\n    return message;\n  },\n  email: value => {\n    let message;\n\n    if (!value) {\n      message = 'A valid email is required';\n    } else if (!EMAIL_PATTERN.test(value)) {\n      message = 'The email is invalid';\n    }\n\n    return message;\n  },\n  password: value => {\n    let message;\n\n    if (!value) {\n      message = 'A valid password is required';\n    } else if (!PASSWORD_PATTERN.test(value)) {\n      message = 'The password needs at least 8 chars';\n    }\n\n    return message;\n  }\n};\n\nfunction UserForm() {\n  _s();\n\n  const history = useHistory();\n  const [state, setState] = useState({\n    user: {\n      name: '',\n      lastName: '',\n      avatar: '',\n      email: '',\n      city: [],\n      password: '',\n      rol: 'adopter'\n    },\n    touch: {},\n    errors: {\n      name: validations.name(),\n      email: validations.email(),\n      lastName: validations.lastName(),\n      password: validations.password()\n    }\n  });\n  const [selectedPrediction, setSelectedPrediction] = useState(null);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const {\n    predictions,\n    setPredictions\n  } = usePlacesAutocomplete(searchValue);\n\n  const handlePredictionSelection = (e, prediction) => {\n    const geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({\n      'placeId': prediction.place_id\n    }, function (responses, status) {\n      console.log(responses);\n\n      if (status === 'OK') {\n        var lat = responses[0].geometry.location.lat();\n        var lng = responses[0].geometry.location.lng();\n        const newState = { ...state,\n          user: { ...state.user,\n            city: [Number(lat), Number(lng)]\n          }\n        };\n        setState(newState);\n      }\n    });\n    e.preventDefault();\n    setSelectedPrediction(prediction);\n    setPredictions();\n  };\n\n  const handleChange = event => {\n    let {\n      name,\n      value\n    } = event.target;\n\n    if (event.target.file) {\n      value = event.target.files[0];\n    }\n\n    setState(state => ({ ...state,\n      user: { ...state.user,\n        [name]: value\n      },\n      errors: { ...state.errors,\n        [name]: validations[name] && validations[name](value)\n      }\n    }));\n  };\n\n  const handleBlur = event => {\n    const {\n      name\n    } = event.target;\n    setState(state => ({ ...state,\n      touch: { ...state.touch,\n        [name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('ENTRA', state);\n    console.log('ENTRA');\n    const {\n      user\n    } = state;\n    userService.registerUser(user).then(user => {\n      setState(user);\n      history.push('/login');\n    }).catch(error => {\n      const {\n        message,\n        errors\n      } = error && error.response ? error.response.data : error;\n      console.error(message);\n      setState(state => ({ ...state,\n        errors: errors\n      }));\n    });\n  };\n\n  const isValid = () => {\n    const {\n      errors\n    } = state;\n    return Object.keys(errors).some(error => errors[error]);\n  };\n\n  const {\n    user,\n    errors,\n    touch\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-5 fw-bold\",\n      children: \"Just a few info to create your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"user-avatar-container\",\n          alt: \"user\",\n          src: user.avatar ? user.avatar : 'https://res.cloudinary.com/getapet/image/upload/v1617970328/default_avatar_xnnmwl.png'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"col-6 shadow register-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-4 d-flex align-items-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user fa-lg me-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            type: \"text\",\n            value: user.name,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            placeholder: \"Name of your user\",\n            className: `form-control form-control-underlined border-primary ${touch.name && errors.name ? 'is-invalid' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-4 d-flex align-items-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-envelope fa-lg me-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"text\",\n            value: user.email,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            placeholder: \"Email of your user\",\n            className: `form-control form-control-underlined border-primary ${touch.email && errors.email ? 'is-invalid' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-4 d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-lock fa-lg me-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: user.password,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            placeholder: \"Enter your password\",\n            className: `form-control form-control-underlined border-primary ${touch.password && errors.password ? 'is-invalid' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-4 d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-map-marker-alt fa-lg me-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"predictionSearch\",\n            autoComplete: \"off\",\n            value: selectedPrediction === null || selectedPrediction === void 0 ? void 0 : selectedPrediction.description,\n            onChange: e => setSearchValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"row google-list\",\n            children: predictions === null || predictions === void 0 ? void 0 : predictions.map(prediction => {\n              var _prediction$structure;\n\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"google-btn-predictions\",\n                  onClick: e => handlePredictionSelection(e, prediction),\n                  onKeyDown: e => handlePredictionSelection(e, prediction),\n                  children: (prediction === null || prediction === void 0 ? void 0 : (_prediction$structure = prediction.structured_formatting) === null || _prediction$structure === void 0 ? void 0 : _prediction$structure.main_text) || \"Not found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, this)\n              }, prediction === null || prediction === void 0 ? void 0 : prediction.place_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-4 d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-cloud-upload-alt fa-lg me-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"avatar\",\n            type: \"file\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            placeholder: \"user logo\",\n            className: `form-control form-control-underlined border-primary ${touch.avatar && errors.avatar ? 'is-invalid' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn create-user-btn\",\n          type: \"submit\",\n          disabled: isValid(),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 96\n          }, this), \" Register user\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserForm, \"6gONZ5X9QwqHuevq0yoWxVYPI8U=\", false, function () {\n  return [useHistory, usePlacesAutocomplete];\n});\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["C:/Users/faque/Desktop/Ironhack/Proyecto-modulo-3/APIDOG/web/src/components/users/user-form/UserForm.js"],"names":["useState","userService","useHistory","usePlacesAutocomplete","EMAIL_PATTERN","PASSWORD_PATTERN","validations","name","value","message","length","lastName","email","test","password","UserForm","history","state","setState","user","avatar","city","rol","touch","errors","selectedPrediction","setSelectedPrediction","searchValue","setSearchValue","predictions","setPredictions","handlePredictionSelection","e","prediction","geocoder","window","google","maps","Geocoder","geocode","place_id","responses","status","console","log","lat","geometry","location","lng","newState","Number","preventDefault","handleChange","event","target","file","files","handleBlur","handleSubmit","registerUser","then","push","catch","error","response","data","isValid","Object","keys","some","description","map","structured_formatting","main_text"],"mappings":"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","sourcesContent":["import './UserForm.css'\r\nimport { useState } from 'react';\r\nimport userService from '../../../services/users-service';\r\nimport { useHistory } from 'react-router';\r\nimport usePlacesAutocomplete from '../../shared/UsePlacesAutocomplete';\r\nconst EMAIL_PATTERN = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst PASSWORD_PATTERN = /^.{8,}$/;\r\n\r\nconst validations = {\r\n    name: (value) => {\r\n        let message;\r\n        if (!value) {\r\n            message = 'A name is required';\r\n        } else if (value.length < 3) {\r\n            message = 'Name needs at least 3 chars'\r\n        } else if (value.length > 50) {\r\n            message = 'Name needs at most 50 chars'\r\n        }\r\n        return message;\r\n    },\r\n    lastName: (value) => {\r\n        let message;\r\n        if (!value) {\r\n            message = 'A last name is required'\r\n        } else if (value > 50) {\r\n            message = 'The last name cant be greater than 50 chars'\r\n        }\r\n        return message;\r\n    },\r\n    email: (value) => {\r\n        let message;\r\n        if(!value) {\r\n            message = 'A valid email is required'\r\n        } else if (!EMAIL_PATTERN.test(value)) {\r\n            message = 'The email is invalid'\r\n        }\r\n        return message;\r\n    },\r\n    password: (value) => {\r\n        let message;\r\n        if(!value) {\r\n            message = 'A valid password is required'\r\n        } else if (!PASSWORD_PATTERN.test(value)) {\r\n            message = 'The password needs at least 8 chars'\r\n        }\r\n        return message;\r\n    },\r\n}\r\n\r\n\r\nfunction UserForm() {\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const [state, setState] = useState({\r\n        user: {\r\n            name: '',\r\n            lastName: '',\r\n            avatar: '',\r\n            email: '',\r\n            city: [],\r\n            password: '',\r\n            rol: 'adopter'\r\n        },\r\n        touch: {},\r\n        errors: {\r\n            name: validations.name(),\r\n            email: validations.email(),\r\n            lastName: validations.lastName(),\r\n            password: validations.password(),\r\n        }\r\n    });\r\n\r\n    const [selectedPrediction, setSelectedPrediction] = useState(null)\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n    const {predictions, setPredictions} = usePlacesAutocomplete(searchValue)\r\n\r\n    const handlePredictionSelection = (e, prediction) => {\r\n        const geocoder = new window.google.maps.Geocoder();\r\n        geocoder.geocode({ \r\n            'placeId': prediction.place_id\r\n        }, \r\n        function(responses, status) {\r\n            console.log(responses)\r\n            if (status === 'OK') {\r\n                var lat = responses[0].geometry.location.lat();\r\n                var lng = responses[0].geometry.location.lng();\r\n                const newState = {\r\n                    ...state,\r\n                    user: {\r\n                        ...state.user,\r\n                        city: [Number(lat), Number(lng)]\r\n                    }\r\n                }\r\n                setState(newState)\r\n            }\r\n        });\r\n        e.preventDefault()\r\n        setSelectedPrediction(prediction)\r\n        setPredictions()\r\n      }\r\n\r\n    const handleChange = (event) => {\r\n        let { name, value } = event.target;\r\n\r\n        if (event.target.file) {\r\n            value = event.target.files[0]\r\n        }\r\n\r\n\r\n        setState(state => ({\r\n            ...state,\r\n            user: {\r\n                ...state.user,\r\n                [name]: value\r\n            },\r\n            errors: {\r\n                ...state.errors,\r\n                [name]: validations[name] && validations[name](value)\r\n            }\r\n        }));\r\n    }\r\n\r\n    const handleBlur = (event) => {\r\n        const { name } = event.target;\r\n        setState(state => ({\r\n            ...state,\r\n            touch: {\r\n                ...state.touch,\r\n                [name]: true\r\n            }\r\n        }));\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log('ENTRA', state)\r\n        \r\n           console.log('ENTRA')\r\n            const { user } = state;\r\n            userService.registerUser(user)\r\n            .then(user => {\r\n                setState(user)\r\n                history.push('/login')\r\n            })\r\n            .catch(error => {\r\n                const { message, errors } = error && error.response ? error.response.data : error;\r\n                console.error(message);\r\n\r\n                setState(state => ({\r\n                    ...state,\r\n                    errors: errors\r\n                }))\r\n            })         \r\n        \r\n    }\r\n\r\n    const isValid = () => {\r\n        const { errors } = state;\r\n        return Object.keys(errors).some(error => errors[error]);\r\n    }\r\n\r\n    const { user, errors, touch } = state;\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"text-center mb-5 fw-bold\">Just a few info to create your Account</h2>\r\n            <div className=\"row justify-content-center\">\r\n            <div className=\"col-2\">\r\n                <img className=\"user-avatar-container\" alt='user' src={user.avatar ? user.avatar: 'https://res.cloudinary.com/getapet/image/upload/v1617970328/default_avatar_xnnmwl.png'} />\r\n            </div>\r\n                <form onSubmit={handleSubmit} className=\"col-6 shadow register-container\">\r\n                    <div className=\"input-group mb-4 d-flex align-items-end\">\r\n                        <span><i className=\"fas fa-user fa-lg me-3\"></i></span>\r\n                        <input name=\"name\" type=\"text\" value={user.name} onChange={handleChange} onBlur={handleBlur} placeholder=\"Name of your user\" className={`form-control form-control-underlined border-primary ${touch.name && errors.name ? 'is-invalid' : ''}`}/>\r\n                        <div className=\"invalid-feedback\">{errors.name}</div>\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-4 d-flex align-items-end\">\r\n                        <span><i className=\"fas fa-envelope fa-lg me-3\"></i></span>\r\n                        <input name=\"email\" type=\"text\" value={user.email} onChange={handleChange} onBlur={handleBlur} placeholder=\"Email of your user\" className={`form-control form-control-underlined border-primary ${touch.email && errors.email ? 'is-invalid' : ''}`}/>\r\n                        <div className=\"invalid-feedback\">{errors.email}</div>\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-4 d-flex align-items-center\">\r\n                        <span><i className=\"fas fa-lock fa-lg me-3\"></i></span>\r\n                        <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange} onBlur={handleBlur} placeholder=\"Enter your password\" className={`form-control form-control-underlined border-primary ${touch.password && errors.password ? 'is-invalid' : ''}`}/>\r\n                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-4 d-flex align-items-center\">\r\n                        <span><i className=\"fas fa-map-marker-alt fa-lg me-3\"></i></span>\r\n                        <input name=\"predictionSearch\" autoComplete='off' value={selectedPrediction?.description} onChange={e => setSearchValue(e.target.value)}/>\r\n                        <ul className='row google-list'>\r\n                            {predictions?.map(prediction => (\r\n                                <li key={prediction?.place_id}>\r\n                                    <button className=\"google-btn-predictions\" onClick={e => handlePredictionSelection(e, prediction)} onKeyDown={e => handlePredictionSelection(e, prediction)}>\r\n                                        {prediction?.structured_formatting?.main_text || \"Not found\"}\r\n                                    </button>\r\n                                </li>\r\n                            ))}\r\n                         </ul>\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-4 d-flex align-items-center\">\r\n                        <span><i className=\"fas fa-cloud-upload-alt fa-lg me-3\"></i></span>\r\n                        <input name=\"avatar\" type=\"file\"  onChange={handleChange} onBlur={handleBlur} placeholder=\"user logo\" className={`form-control form-control-underlined border-primary ${touch.avatar && errors.avatar ? 'is-invalid' : ''}`}/>\r\n                        <span></span>\r\n                        <div className=\"invalid-feedback\">{errors.avatar}</div>\r\n                    </div>\r\n\r\n                    <button className=\"btn create-user-btn\" type=\"submit\" disabled={isValid()}><i className=\"fas fa-plus\"></i> Register user</button>\r\n                </form>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}