{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faque\\\\Desktop\\\\Ironhack\\\\Proyecto-modulo-3\\\\APIDOG\\\\web\\\\src\\\\components\\\\pets\\\\pet-form\\\\PetForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport petService from '../../../services/pet-service';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validations = {\n  nickname: value => {\n    let message;\n\n    if (!value) {\n      message = 'A pet name is required';\n    } else if (value < 3) {\n      message = 'Pets name needs at least 3 chars';\n    } else if (value > 50) {\n      message = 'Pets name needs at most 50 chars';\n    }\n\n    return message;\n  },\n  specie: value => {\n    let message;\n\n    if (!value) {\n      message = 'The pet specie is required';\n    }\n\n    return message;\n  },\n  gender: value => {\n    let message;\n\n    if (!value) {\n      message = 'Pet gender is required';\n    }\n\n    return message;\n  }\n  /* \r\n  race: (value) => {\r\n      let message;\r\n      if (!value) {\r\n          message = 'A pet race is required'\r\n      } else if (value < 3) {\r\n          message = 'Pets race needs at least 3 chars'\r\n      } else if (value > 50) {\r\n          message = 'Pets race needs at most 50 chars'\r\n      }\r\n      return message;\r\n  },\r\n  age: (value) => {\r\n      let message;\r\n      if (!value) {\r\n          message = 'Pet age is required'\r\n      } else if (value < 3) {\r\n          message = 'Pets name needs at least 3 chars'\r\n      } else if (value > 50) {\r\n          message = 'Pets name needs at most 50 chars'\r\n      }\r\n      return message;\r\n  }, */\n\n};\n\nfunction PetForm() {\n  _s();\n\n  /*\r\n  \r\n  race: {\r\n      type: String, \r\n      required: 'The pet race is required',\r\n      minLength: [3, 'Name needs at least 3 chars'],\r\n      maxLength: [50, 'Name needs at most 50 chars']\r\n  },\r\n  age: {\r\n      type: Number, \r\n      required: 'Pet age is required',\r\n      min: [1, 'Age must be greater than 1'],\r\n  },\r\n  gender: {\r\n      type: String, \r\n      enum: ['male', 'female'],\r\n      required: 'Pet gender is required'\r\n  },\r\n  personality: {\r\n      type: String, \r\n      required: 'Pet personality is required',\r\n      minLength: [20, 'Name needs at least 20 chars'],\r\n      maxLength: [300, 'Name needs at most 300 chars']\r\n  },\r\n  shelter: {\r\n      ref: 'User',\r\n      type: Schema.Types.ObjectId,\r\n      required: 'A shelter owner is required'\r\n  },\r\n  status: {\r\n      type: String,\r\n      enum: ['Adopted', \"Looking for home\"],\r\n      required: 'Need to say if the pet is available',\r\n  }\r\n  */\n  const history = useHistory();\n  const [state, setState] = useState({\n    pet: {\n      nickname: '',\n      specie: '',\n      gender: ''\n    },\n    errors: {\n      nickname: validations.nickname(),\n      specie: validations.specie(),\n      gender: validations.gender()\n    },\n    touch: {}\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState(state => {\n      return { ...state,\n        event: { ...state.event,\n          [name]: value\n        },\n        errors: { ...state.errors,\n          [name]: validations[name] && validations[name](value)\n        }\n      };\n    });\n  };\n\n  const handleBlur = event => {\n    const {\n      name\n    } = event.target;\n    setState(state => ({ ...state,\n      touch: { ...state.touch,\n        [name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (isValid()) {\n      try {\n        const eventData = state.event;\n        const pet = eventData.id ? await petService.update(eventData) : await petService.create(eventData);\n        history.push(`/pets/${pet.id}`);\n      } catch (error) {\n        var _error$response;\n\n        const {\n          message,\n          errors\n        } = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error;\n        setState(state => ({ ...state,\n          errors: { ...errors,\n            title: !errors && message\n          },\n          touch: { ...errors,\n            title: !errors && message\n          }\n        }));\n      }\n    }\n  };\n\n  const isValid = () => {\n    const {\n      errors\n    } = state;\n    return Object.keys(errors).some(error => errors[error]);\n  };\n\n  const {\n    pet,\n    errors,\n    touch\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-5 fw-bold\",\n      children: \"Lets create our pet profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"col-6 shadow register-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-4 d-flex align-items-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-paw fa-lg me-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"nickname\",\n            type: \"text\",\n            value: pet.nickname,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            placeholder: \"Name of your pet\",\n            className: `form-control form-control-underlined border-primary ${touch.nickname && errors.nickname ? 'is-invalid' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-4 d-flex align-items-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Specie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              className: \"me-4\",\n              value: pet.specie,\n              name: \"specie\",\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Specie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"dog\",\n                children: \"Dog\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"cat\",\n                children: \"Cat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            className: \"me-4\",\n            value: pet.gender,\n            name: \"gender\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"male\",\n              children: \"male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"female\",\n              children: \"female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: errors.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn create-shelter-btn\",\n          type: \"submit\",\n          disabled: isValid(),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 99\n          }, this), \" Create Pet\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PetForm, \"vM/daspixj9UDBxj8r+fKi+/dYw=\", false, function () {\n  return [useHistory];\n});\n\n_c = PetForm;\nexport default PetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetForm\");","map":{"version":3,"sources":["C:/Users/faque/Desktop/Ironhack/Proyecto-modulo-3/APIDOG/web/src/components/pets/pet-form/PetForm.js"],"names":["useState","useHistory","petService","MenuItem","Select","validations","nickname","value","message","specie","gender","PetForm","history","state","setState","pet","errors","touch","handleChange","event","name","target","handleBlur","handleSubmit","preventDefault","isValid","eventData","id","update","create","push","error","response","data","title","Object","keys","some"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport petService from '../../../services/pet-service';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst validations = {\r\n    nickname: (value) => {\r\n        let message;\r\n        if (!value) {\r\n            message = 'A pet name is required'\r\n        } else if (value < 3) {\r\n            message = 'Pets name needs at least 3 chars'\r\n        } else if (value > 50) {\r\n            message = 'Pets name needs at most 50 chars'\r\n        }\r\n        return message;\r\n    },\r\n    specie: (value) => {\r\n        let message;\r\n        if (!value) {\r\n            message = 'The pet specie is required'\r\n        }\r\n        return message;\r\n    },\r\n    gender: (value) => {\r\n        let message;\r\n        if (!value) {\r\n            message = 'Pet gender is required'\r\n        }\r\n        return message;\r\n    },\r\n    \r\n    /* \r\n    race: (value) => {\r\n        let message;\r\n        if (!value) {\r\n            message = 'A pet race is required'\r\n        } else if (value < 3) {\r\n            message = 'Pets race needs at least 3 chars'\r\n        } else if (value > 50) {\r\n            message = 'Pets race needs at most 50 chars'\r\n        }\r\n        return message;\r\n    },\r\n    age: (value) => {\r\n        let message;\r\n        if (!value) {\r\n            message = 'Pet age is required'\r\n        } else if (value < 3) {\r\n            message = 'Pets name needs at least 3 chars'\r\n        } else if (value > 50) {\r\n            message = 'Pets name needs at most 50 chars'\r\n        }\r\n        return message;\r\n    }, */\r\n}\r\n\r\n\r\nfunction PetForm() {\r\n\r\n\r\n    /*\r\n    \r\n    race: {\r\n        type: String, \r\n        required: 'The pet race is required',\r\n        minLength: [3, 'Name needs at least 3 chars'],\r\n        maxLength: [50, 'Name needs at most 50 chars']\r\n    },\r\n    age: {\r\n        type: Number, \r\n        required: 'Pet age is required',\r\n        min: [1, 'Age must be greater than 1'],\r\n    },\r\n    gender: {\r\n        type: String, \r\n        enum: ['male', 'female'],\r\n        required: 'Pet gender is required'\r\n    },\r\n    personality: {\r\n        type: String, \r\n        required: 'Pet personality is required',\r\n        minLength: [20, 'Name needs at least 20 chars'],\r\n        maxLength: [300, 'Name needs at most 300 chars']\r\n    },\r\n    shelter: {\r\n        ref: 'User',\r\n        type: Schema.Types.ObjectId,\r\n        required: 'A shelter owner is required'\r\n    },\r\n    status: {\r\n        type: String,\r\n        enum: ['Adopted', \"Looking for home\"],\r\n        required: 'Need to say if the pet is available',\r\n    }\r\n    */ \r\n\r\n    const history = useHistory();\r\n\r\n    const [state, setState] = useState({\r\n        pet: {\r\n            nickname: '',\r\n            specie: '',\r\n            gender: '',\r\n        },\r\n        errors: {\r\n            nickname: validations.nickname(),\r\n            specie: validations.specie(),\r\n            gender: validations.gender(),\r\n        },\r\n        touch: {}\r\n    });\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setState(state => {\r\n            return {\r\n                ...state,\r\n                event: {\r\n                    ...state.event,\r\n                    [name]: value,\r\n                },\r\n                errors: {\r\n                    ...state.errors,\r\n                    [name]: validations[name] && validations[name](value)\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleBlur = (event) => {\r\n        const { name } = event.target;\r\n        setState(state => ({\r\n          ...state,\r\n          touch: {\r\n            ...state.touch,\r\n            [name]: true\r\n          }\r\n        }));\r\n      }\r\n\r\n      const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (isValid()) {\r\n            try {\r\n                const eventData = state.event;\r\n                const pet = eventData.id ? await petService.update(eventData) : await petService.create(eventData);\r\n                history.push(`/pets/${pet.id}`);\r\n            } catch(error) {\r\n                const { message, errors } = error.response?.data || error;\r\n\r\n                setState(state => ({\r\n                    ...state,\r\n                    errors: {\r\n                        ...errors,\r\n                        title: !errors && message\r\n                    },\r\n                    touch: {\r\n                        ...errors,\r\n                        title: !errors && message\r\n                    }\r\n                }));\r\n\r\n\r\n            }\r\n        }\r\n\r\n      }\r\n\r\n      const isValid = () => {\r\n          const { errors } = state;\r\n          return Object.keys(errors).some(error => errors[error]);\r\n      }\r\n\r\n      const { pet, errors, touch} = state;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"text-center mb-5 fw-bold\">Lets create our pet profile</h2>\r\n            <div className=\"row justify-content-center\">\r\n        \r\n                <form onSubmit={handleSubmit} className=\"col-6 shadow register-container\">\r\n\r\n                    <div className=\"input-group mb-4 d-flex align-items-end\">\r\n                        <span><i className=\"fas fa-paw fa-lg me-3\"></i></span>\r\n                        <input name=\"nickname\" type=\"text\" value={pet.nickname} onChange={handleChange} onBlur={handleBlur} placeholder=\"Name of your pet\" className={`form-control form-control-underlined border-primary ${touch.nickname && errors.nickname ? 'is-invalid' : ''}`}/>\r\n                        <div className=\"invalid-feedback\">{errors.nickname}</div>\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-4 d-flex align-items-end\">\r\n                        <div>\r\n                        <h5>Specie</h5>\r\n                        <Select className=\"me-4\" value={pet.specie} name=\"specie\" onChange={handleChange} >\r\n                            <h5>Specie</h5>\r\n                            <MenuItem value=\"dog\"  >Dog</MenuItem>\r\n                            <MenuItem value=\"cat\"  >Cat</MenuItem>\r\n                        </Select>\r\n                        </div>\r\n                        \r\n                        <h5>Gender</h5>\r\n                        <Select className=\"me-4\" value={pet.gender} name=\"gender\" onChange={handleChange} >\r\n                            \r\n                            <MenuItem value=\"male\"  >male</MenuItem>\r\n                            <MenuItem value=\"female\" >female</MenuItem>\r\n                        </Select>\r\n\r\n                        <div className=\"invalid-feedback\">{errors.gender}</div>\r\n                    </div>\r\n\r\n                    <button className=\"btn create-shelter-btn\" type=\"submit\" disabled={isValid()}><i className=\"fas fa-plus\"></i> Create Pet</button>\r\n                </form>\r\n            </div>   \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PetForm;"]},"metadata":{},"sourceType":"module"}