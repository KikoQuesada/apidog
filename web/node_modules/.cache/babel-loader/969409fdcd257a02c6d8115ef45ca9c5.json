{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faque\\\\Desktop\\\\Ironhack\\\\Proyecto-modulo-3\\\\APIDOG\\\\web\\\\src\\\\components\\\\pets\\\\pet-detail\\\\PetDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, useHistory } from 'react-router';\nimport { useState, useEffect } from 'react';\nimport petService from '../../../services/pet-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PetDetail() {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const [pet, setPet] = useState();\n  useEffect(() => {\n    async function fetchPet() {\n      try {\n        const {\n          id\n        } = params;\n        const pet = await petService.detail(id);\n        setPet(pet);\n      } catch (error) {\n        var _error$response;\n\n        if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {\n          history.push('/pets');\n        } else {\n          console.error(error);\n        }\n      }\n    }\n\n    fetchPet();\n    return () => {// ComponentWillUnmount\n    };\n  }, []);\n  const {\n    name,\n    race,\n    age,\n    image,\n    gender,\n    personality,\n    shelter,\n    specie,\n    status\n  } = pet;\n\n  if (!pet) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PetDetail, \"k3ATmXdgRJxOTJSPL9ISj7DI/4k=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = PetDetail;\nexport default PetDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetDetail\");","map":{"version":3,"sources":["C:/Users/faque/Desktop/Ironhack/Proyecto-modulo-3/APIDOG/web/src/components/pets/pet-detail/PetDetail.js"],"names":["useParams","useHistory","useState","useEffect","petService","PetDetail","history","params","pet","setPet","fetchPet","id","detail","error","response","status","push","console","name","race","age","image","gender","personality","shelter","specie"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,cAAtC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;;AAGA,SAASC,SAAT,GAAqB;AAAA;;AAEjB,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAMM,MAAM,GAAGP,SAAS,EAAxB;AAEA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,EAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeO,QAAf,GAA0B;AACtB,UAAI;AACA,cAAM;AAAEC,UAAAA;AAAF,YAASJ,MAAf;AACA,cAAMC,GAAG,GAAG,MAAMJ,UAAU,CAACQ,MAAX,CAAkBD,EAAlB,CAAlB;AACAF,QAAAA,MAAM,CAACD,GAAD,CAAN;AAEH,OALD,CAKE,OAAMK,KAAN,EAAa;AAAA;;AACX,YAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAEC,QAAP,oEAAiBC,MAAjB,MAA4B,GAAhC,EAAqC;AACjCT,UAAAA,OAAO,CAACU,IAAR,CAAa,OAAb;AACH,SAFD,MAEQ;AACJC,UAAAA,OAAO,CAACJ,KAAR,CAAcA,KAAd;AACH;AACJ;AACJ;;AAEDH,IAAAA,QAAQ;AAER,WAAO,MAAM,CACT;AACH,KAFD;AAIH,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,GAAd;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA,WAAlC;AAA+CC,IAAAA,OAA/C;AAAwDC,IAAAA,MAAxD;AAAgEV,IAAAA;AAAhE,MAA2EP,GAAjF;;AACA,MAAI,CAACA,GAAL,EAAU;AACN,WAAO,IAAP;AACH;;AAGD,sBACI;AAAA,cAAKU;AAAL;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAxCQb,S;UAEWJ,U,EACDD,S;;;KAHVK,S;AA0CT,eAAeA,SAAf","sourcesContent":["import { useParams, useHistory } from 'react-router';\r\nimport { useState, useEffect } from 'react';\r\nimport petService from '../../../services/pet-service';\r\n\r\n\r\nfunction PetDetail() {\r\n\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    const [pet, setPet] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchPet() {\r\n            try {\r\n                const { id } = params;\r\n                const pet = await petService.detail(id);\r\n                setPet(pet);\r\n\r\n            } catch(error) {\r\n                if (error?.response?.status === 404) {\r\n                    history.push('/pets');\r\n                }  else {\r\n                    console.error(error);\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchPet();\r\n\r\n        return () => {\r\n            // ComponentWillUnmount\r\n        }\r\n\r\n    }, [])\r\n\r\n    const { name, race, age, image, gender, personality, shelter, specie, status } = pet;\r\n    if (!pet) {\r\n        return null\r\n    }\r\n\r\n    \r\n    return ( \r\n        <h4>{name}</h4>\r\n    )\r\n}\r\n\r\nexport default PetDetail;"]},"metadata":{},"sourceType":"module"}